service: resize

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'prod'}
  timeout: 30
  region: eu-west-1
  vpc:
    securityGroupIds:
      - ${ssm:/API/SecurityGroup}
    subnetIds:
      - ${ssm:/API/Subnet}

functions:
  resize:
    handler: src/handler.resize
    environment:
      stage: ${self:provider.stage}
      BUCKET_NAME: ${env:BUCKET_NAME}
      BUCKET_REGION: ${env:BUCKET_REGION}
      AWS_KEY_ID: ${ssm:/resize/AwsKeyId}
      AWS_KEY_SECRET: ${ssm:/resize/AwsKeySecret~true}

      DB_HOST: ${ssm:/DB/Host}
      DB_PORT: ${ssm:/DB/Port}
      DB_NAME: ${ssm:/DB/Name}
      DB_USER: ${ssm:/resize/DB/User}
      DB_PASSWORD: ${ssm:/resize/DB/Password~true}

    events:
      - s3:
          bucket: ${env:BUCKET_NAME}
          event: s3:ObjectCreated:*
          existing: true
      - http:
          method: POST
          path: /resize

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    port: 9000
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    includeModules: true
